language: objective-c
osx_image: xcode10.1

branches:
  only:
  - master

env:
  global:
  - NODE_VERSION=11.9.0



# export PING_SLEEP=30s
# export WORKDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
# export BUILD_OUTPUT=$WORKDIR/build.out
# touch $BUILD_OUTPUT

# dump_mvn_output() {
#    echo Tailing the last 500 lines of mvn output:
#    tail -500 $BUILD_OUTPUT 
# }

install:
- export PING_SLEEP=30s
- export WORKDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
- export BUILD_OUTPUT=$WORKDIR/build.out
- touch $BUILD_OUTPUT
- softwareupdate --list
- softwareupdate --install "Command Line Tools (macOS High Sierra version 10.13) for Xcode-10.1"
- brew update >> $BUILD_OUTPUT
- brew tap wix/brew >> $BUILD_OUTPUT
- brew install applesimutils >> $BUILD_OUTPUT
- brew install yarn >> $BUILD_OUTPUT
- curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.2/install.sh | bash
- export NVM_DIR="$HOME/.nvm" && [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
- nvm install $NODE_VERSION >> $BUILD_OUTPUT
- nvm use $NODE_VERSION
- npm install -g react-native-cli >> $BUILD_OUTPUT
- npm install -g detox-cli >> $BUILD_OUTPUT
- rm -rf ~/.rncache
- rm -rf ios/build
- rm -rf node_modules
- yarn install >> $BUILD_OUTPUT
- cd node_modules/react-native && ./scripts/ios-install-third-party.sh
- cd third-party/glog-0.3.5/ && ../../scripts/ios-configure-glog.sh
- cd ../../../../
- cd ios
- pod update >> $BUILD_OUTPUT
- cd ..
- tail -500 $BUILD_OUTPUT 
- detox build -c ios.sim.debug